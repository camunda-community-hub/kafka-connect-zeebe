<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <name>Kafka Connect Zeebe</name>
  <artifactId>kafka-connect-zeebe</artifactId>
  <groupId>io.zeebe</groupId>
  <packaging>jar</packaging>
  <version>0.40.2-SNAPSHOT</version>
  <inceptionYear>2019</inceptionYear>
  <url>https://github.com/camunda-community-hub/kafka-connect-zeebe</url>

  <parent>
      <groupId>org.camunda.community</groupId>
      <artifactId>community-hub-release-parent</artifactId>
      <version>1.4.4</version>
      <relativePath />
  </parent>

  <properties>
    <!-- release parent settings -->
    <version.java>1.8</version.java>

    <!-- disable jdk8 javadoc checks on release build -->
    <additionalparam>-Xdoclint:none</additionalparam>

    <!-- license header -->
    <license.header>com/mycila/maven/plugin/license/templates/APACHE-2.txt</license.header>

    <!-- project dependencies -->
    <version.assertj>3.23.1</version.assertj>
    <version.kafka>3.2.2</version.kafka>
    <version.jsonpath>2.7.0</version.jsonpath>
    <version.junit>5.9.1</version.junit>
    <version.log4j>2.18.0</version.log4j>
    <version.slf4j>1.7.36</version.slf4j>
    <version.zeebe>8.3.4</version.zeebe>

    <!-- plugin version -->
    <plugin.version.assembly>3.4.2</plugin.version.assembly>
    <plugin.version.checkstyle>3.2.0</plugin.version.checkstyle>
    <plugin.version.enforcer>3.0.0-M2</plugin.version.enforcer>
    <plugin.version.failsafe>2.22.1</plugin.version.failsafe>
    <plugin.version.fmt>2.19</plugin.version.fmt>
    <plugin.version.kafka.connect>0.12.0</plugin.version.kafka.connect>
    <plugin.version.license>4.1</plugin.version.license>
    <plugin.version.surefire>2.22.2</plugin.version.surefire>

    <!-- maven extensions -->
    <extension.version.os-maven-plugin>1.6.1</extension.version.os-maven-plugin>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.camunda</groupId>
        <artifactId>zeebe-bom</artifactId>
        <version>${version.zeebe}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>io.camunda</groupId>
      <artifactId>zeebe-client-java</artifactId>
    </dependency>

    <dependency>
      <groupId>com.jayway.jsonpath</groupId>
      <artifactId>json-path</artifactId>
      <version>${version.jsonpath}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>connect-api</artifactId>
      <version>${version.kafka}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>connect-json</artifactId>
      <version>${version.kafka}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${version.slf4j}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
      <version>${version.log4j}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>${version.log4j}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${version.junit}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${version.assertj}</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <!-- LICENSE PLUGIN -->
      <plugin>
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>${plugin.version.license}</version>
        <configuration>
          <header>${license.header}</header>
          <properties>
            <owner>camunda services GmbH</owner>
            <email>info@camunda.com</email>
          </properties>
          <includes>
            <include>**/*.java</include>
          </includes>
          <mapping>
            <java>SLASHSTAR_STYLE</java>
          </mapping>
        </configuration>
        <executions>
          <execution>
            <id>add-license</id>
            <phase>compile</phase>
            <goals>
              <goal>format</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- CHECKSTYLE -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${plugin.version.checkstyle}</version>
        <!-- dependency on build tool to reference the checkstyle cfg -->
        <dependencies>
          <dependency>
            <groupId>io.camunda</groupId>
            <artifactId>zeebe-build-tools</artifactId>
            <version>${version.zeebe}</version>
          </dependency>
        </dependencies>
        <configuration>
          <configLocation>check/.checkstyle.xml</configLocation>
          <includeTestSourceDirectory>true</includeTestSourceDirectory>
          <encoding>UTF-8</encoding>
          <failOnViolation>true</failOnViolation>
          <sourceDirectories>
            <sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
            <sourceDirectory>${project.build.testSourceDirectory}</sourceDirectory>
          </sourceDirectories>
        </configuration>
        <executions>
          <execution>
            <id>validate-java</id>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- unit tests -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${plugin.version.surefire}</version>
        <configuration>
          <failIfNoTests>false</failIfNoTests>
          <trimStackTrace>false</trimStackTrace>
          <redirectTestOutputToFile>true</redirectTestOutputToFile>
        </configuration>
      </plugin>

      <!-- Google code format plugin -->
      <plugin>
        <groupId>com.spotify.fmt</groupId>
        <artifactId>fmt-maven-plugin</artifactId>
        <version>${plugin.version.fmt}</version>
        <executions>
          <execution>
            <goals>
              <goal>format</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <additionalSourceDirectories>
            <additionalSourceDirectory>${project.basedir}/src/test/jmh</additionalSourceDirectory>
          </additionalSourceDirectories>
        </configuration>
      </plugin>

      <!-- Assembly -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>${plugin.version.assembly}</version>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptorRefs>
                <descriptorRef>jar-with-dependencies</descriptorRef>
              </descriptorRefs>
              <finalName>${project.artifactId}-${project.version}-uber</finalName>
              <appendAssemblyId>false</appendAssemblyId>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Kafka Connect Packaging Plugin -->
      <plugin>
        <groupId>io.confluent</groupId>
        <version>${plugin.version.kafka.connect}</version>
        <artifactId>kafka-connect-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>kafka-connect</goal>
            </goals>
            <configuration>
              <title>Kafka Connect Camunda Platform 8 / Zeebe</title>
              <documentationUrl>https://github.com/camunda-community-hub/kafka-connect-zeebe</documentationUrl>
              <description>
This connector connects the Camunda Platform 8 orchestration and workflow engine (Zeebe) with Kafka. This brings BPMN process automation capabilities into the Kafka world.

The connector allows to send messages to a Kafka topic when a workflow instance reached a specific task (Kafka Connect Source) and to consume messages from a Kafka topic and correlate them to a process instance (Kafka Connect Sink).

Typical use cases are microservices orchestration or processes triggered by certain events.
              </description>
              <logo>logos/camunda.png</logo>

              <supportProviderName>Camunda Services GmbH</supportProviderName>
              <supportSummary>
                Camunda supports kafka-connect-zeebe as a community project.
              </supportSummary>
              <supportUrl>https://github.com/camunda-community-hub/kafka-connect-zeebe</supportUrl>
              <supportLogo>logos/camunda.png</supportLogo>

              <ownerUsername>camunda</ownerUsername>
              <ownerType>organization</ownerType>
              <ownerName>Camunda Services GmbH</ownerName>
              <ownerUrl>https://camunda.com/</ownerUrl>
              <ownerLogo>logos/camunda.png</ownerLogo>

              <componentTypes>
                <componentType>sink</componentType>
                <componentType>source</componentType>
              </componentTypes>

              <tags>
                <tag>zeebe</tag>
                <tag>camunda</tag>
                <tag>BPMN</tag>
                <tag>process automation</tag>
                <tag>workflow</tag>
                <tag>workflow automation</tag>
                <tag>orchestration</tag>
              </tags>

              <requirements>
                <requirement>Zeebe 8.x (Camunda Platform 8.x - SaaS or Self-Managed)</requirement>
              </requirements>

              <deliveryGuarantee>
                <deliveryGuarantee>atLeastOnce</deliveryGuarantee>
              </deliveryGuarantee>

              <confluentControlCenterIntegration>true</confluentControlCenterIntegration>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
  </build>

 <profiles>
    <profile>
      <id>community-action-maven-release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>3.0.1</version>
            <executions>
                <execution>
                    <id>sign-artifacts</id>
                    <phase>verify</phase>
                    <goals>
                        <goal>sign</goal>
                    </goals>
                </execution>
            </executions>
            <configuration>
                <!-- Prevent gpg from using pinentry programs -->
                <gpgArguments>
                    <arg>--pinentry-mode</arg>
                    <arg>loopback</arg>
                </gpgArguments>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
<!--
  <profiles>
    <profile>
      <id>release</id>
      <properties>
        <plugin.version.gpg>1.6</plugin.version.gpg>
        <gpg.passphrase>${env.GPG_PASS}</gpg.passphrase>
        <resume>false</resume>
        <tag>${env.RELEASE_VERSION}</tag>
        <releaseVersion>${env.RELEASE_VERSION}</releaseVersion>
        <developmentVersion>${env.DEVELOPMENT_VERSION}</developmentVersion>
        <arguments>-DskipTests</arguments>
      </properties>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-gpg-plugin</artifactId>
              <configuration>
                <gpgArguments>
                  <arg>-pinentry-mode</arg>
                  <arg>loopback</arg>
                </gpgArguments>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
  </profiles>
-->
  <repositories>
    <repository>
      <id>zeebe</id>
      <name>Zeebe Repository</name>
      <url>https://artifacts.camunda.com/artifactory/zeebe-io/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>

    <repository>
      <id>zeebe-snapshots</id>
      <name>Zeebe Snapshot Repository</name>
      <url>https://artifacts.camunda.com/artifactory/zeebe-io-snapshots/</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>

  <scm>
    <url>https://github.com/camunda-community-hub/kafka-connect-zeebe</url>
    <connection>scm:git:git@github.com:camunda-community-hub/kafka-connect-zeebe.git</connection>
    <developerConnection>scm:git:git@github.com:camunda-community-hub/kafka-connect-zeebe.git</developerConnection>
    <tag>HEAD</tag>
  </scm>
</project>

